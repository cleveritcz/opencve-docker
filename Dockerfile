FROM rockylinux:9-minimal as base

# Builder
FROM base as builder

ARG OPENCVE_REPOSITORY
ARG OPENCVE_VERSION $OPENCVE_VERSION
ARG PYTHON_VERSION $PYTHON_VERSION
ARG HTTP_PROXY $HTTP_PROXY
ARG HTTPS_PROXY $HTTPS_PROXY

ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTPS_PROXY

RUN microdnf install -y which findutils tar git wget gcc zlib-devel openssl-devel bzip2-devel git libffi-devel
RUN wget -qq https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz && tar -xvf Python-$PYTHON_VERSION.tgz
RUN mkdir ~/python3.8 && cd Python-$PYTHON_VERSION && ./configure --enable-optimizations --with-ensurepip=install \
    --prefix=/app/python$PYTHON_VERSION && make && make install

WORKDIR /opencve

RUN git clone --depth 1 -b v$OPENCVE_VERSION "$OPENCVE_REPOSITORY" . || git clone --depth 1 -b $OPENCVE_VERSION "$OPENCVE_REPOSITORY" .

WORKDIR /app

ENV PATH="/app/python$PYTHON_VERSION/bin:$PATH"

RUN python3.8 -m venv /app/venv

ENV PATH="/app/venv/bin:/app/python$PYTHON_VERSION/bin:$PATH"

RUN python3.8 -m pip install --upgrade pip

RUN python3.8 -m pip install /opencve/

COPY run.sh .

# OpenCVE Image
FROM base

ARG OPENCVE_REPOSITORY
ARG HTTP_PROXY
ARG HTTPS_PROXY

ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTPS_PROXY

LABEL name="opencve"
LABEL maintainer="dev@opencve.io"
LABEL url="${OPENCVE_REPOSITORY}"

COPY --from=builder /app/ /app/

RUN echo -e "opencve:x:1000:" >> /etc/group && \
    echo -e "opencve:x:1000:1000:opencve:/app:/bin/sh" >> /etc/passwd && \
    echo -e "opencve:*:19295:0:99999:7:::" >> /etc/shadow && \
    microdnf -y update && microdnf clean all && \
    chown -R opencve:opencve /app

USER opencve

WORKDIR /app

ENV PATH="/app/venv/bin:/app/python$PYTHON_VERSION/bin:$PATH"

ENV OPENCVE_HOME="/app"

ENTRYPOINT ["./run.sh"]
