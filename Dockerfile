FROM rockylinux/rockylinux:9-minimal as base

# Builder
FROM base as builder

ARG OPENCVE_REPOSITORY
ARG OPENCVE_VERSION
ARG HTTP_PROXY
ARG HTTPS_PROXY

ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTPS_PROXY

RUN microdnf install -y tar git wget gcc zlib-devel openssl-devel bzip2-devel git libffi-devel
RUN wget -qq https://www.python.org/ftp/python/3.8.16/Python-3.8.16.tgz && tar -xvf Python-3.8.16.tgz
RUN mkdir ~/python3.8 && cd Python-3.8.16 && ./configure --enable-optimizations --with-ensurepip=install \
    --prefix=/app/python3.8 && make && make install

WORKDIR /opencve

RUN git clone --depth 1 -b v${OPENCVE_VERSION} "${OPENCVE_REPOSITORY}" . || git clone --depth 1 -b ${OPENCVE_VERSION} "${OPENCVE_REPOSITORY}" .

WORKDIR /app

ENV PATH="/app/python3.8/bin:$PATH"

RUN python3.8 -m venv /app/venv

ENV PATH="/app/venv/bin:/app/python3.8/bin:$PATH"

RUN python3.8 -m pip install --upgrade pip

RUN python3.8 -m pip install /opencve/

COPY run.sh .

# OpenCVE Image
FROM base

ARG OPENCVE_REPOSITORY
ARG HTTP_PROXY
ARG HTTPS_PROXY

ENV http_proxy=$HTTP_PROXY
ENV https_proxy=$HTTPS_PROXY

LABEL name="opencve"
LABEL maintainer="dev@opencve.io"
LABEL url="${OPENCVE_REPOSITORY}"

RUN echo "Prepping user and group opencve"
RUN echo -e "opencve:x:1000:" >> /etc/group
RUN echo -e "opencve:x:1000:1000:opencve:/app:/bin/sh" >> /etc/passwd
RUN echo -e "opencve:*:19295:0:99999:7:::" >> /etc/shadow

RUN microdnf -y update && microdnf clean all

COPY --from=builder /app/ /app/

RUN chown -R opencve:opencve /app

USER opencve

WORKDIR /app

ENV PATH="/app/venv/bin:/app/python3.8/bin:$PATH"

ENV OPENCVE_HOME="/app"

ENTRYPOINT ["./run.sh"]
